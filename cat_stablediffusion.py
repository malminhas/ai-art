import os
import io, warnings
from PIL import Image
from IPython.display import display
from stability_sdk import client
import stability_sdk.interfaces.gooseai.generation.generation_pb2 as generation

stability_api = None

def configureEnvVars(key, host='grpc.stability.ai:443'):
    # NB: host url is not prepended with \"https\" nor does it have a trailing slash.
    os.environ['STABILITY_HOST'] = host
    os.environ['STABILITY_KEY'] = key

def initStableDiffusion():
    configureEnvVars(getAPIKey('.stableDiffusionKey'))
    global stability_api
    stability_api = client.StabilityInference(
        key=os.getenv('STABILITY_KEY'), 
        verbose=True,
    )
    
def getAPIKey(file=None):
    has_key = os.environ.get('STABILITY_KEY')
    if file:
        with open(file) as f:
            key = f.read()
    else:
        key = getpass.getpass('Enter your API Key')
    return key

def generateImage(text):
    img = None
    # the object returned is a python generator
    answers = stability_api.generate(
        prompt=text,
        seed=34567, # if provided, specifying a random seed makes results deterministic
        steps=30, # defaults to 50 if not specified
    )
    # iterating over the generator produces the api response
    for resp in answers:
        for artifact in resp.artifacts:
            if artifact.finish_reason == generation.FILTER:
                warnings.warn(
                    "Your request activated the API's safety filters and could not be processed."
                    "Please modify the prompt and try again.")
            if artifact.type == generation.ARTIFACT_IMAGE:
                img = Image.open(io.BytesIO(artifact.binary))
    return img

def generateImageFromImage(img, text):
    # NOTE: if we're passing in an image generated by SD, you may get better results by providing 
    # a different seed value than was used to generate the image    
    answers = stability_api.generate(
        prompt=text,
        init_image=img,
        seed=54321, 
        start_schedule=0.6, # this controls the "strength" of the prompt relative to the init image
    )
    # iterating over the generator produces the api response
    for resp in answers:
        for artifact in resp.artifacts:
            if artifact.finish_reason == generation.FILTER:
                warnings.warn(
                    "Your request activated the API's safety filters and could not be processed."
                    "Please modify the prompt and try again.")
            if artifact.type == generation.ARTIFACT_IMAGE:
                img = Image.open(io.BytesIO(artifact.binary))
    return img

def textToImage(prompt_text, img=None, target=None, show=False):
    if not img:
        img = generateImage(prompt_text)
    else:
        img = generateImageFromImage(img, prompt_text)
    if img:
        if target:
            img.save(target, target[-3:])
        if show:
            display(img)
    return img


if __name__ == '__main__':
    initStableDiffusion()
    prompt_text = 'an image showing a happy female Technical Program Manager'
    image_file = 'test_stablediffusion.png'
    image = textToImage(prompt_text, target=image_file)
    print(f'generated image {image} of size {os.path.getsize(image_file)}')
